[project]
name = "t8-client"
version = "0.1.0"
description = "Aplicación para obtener información de la API del T8"
authors = [
    {name = "evacuervosolis",email = "evacuervosolis@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"

[tool.poetry.dependencies]
numpy = "^2.2.4"
requests = "^2.32.3"
matplotlib = "^3.10.1"
scipy = "^1.15.2"
click = "^8.1.8"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
ruff = "^0.11.0"
pre-commit = "^4.2.0"
argparse = "^1.4.0"


[tool.ruff]
line-length = 88
lint.select = [
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear - common bugs and anti-patterns
    "C90", # McCabe complexity
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "NPY", # flake8-numpy
    "PL",  # pylint
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # ruff-specific, import optimization and other inefficiencies
    "SIM", # flake8-simplify
    "UP",  # pyupgradej
    "W",   # pycodestyle
    "ANN", # flake8-annotations - Consistent type annotations
    # "D", # pydocstyle
    # "EM", # flake8-errmsg
    # "ERA", # flake8-eradicate - remove commented out code
    # "PT",  # flake8-pytest-style
    # "S", # flake8-bandit - security checks
    # "SLF", # flake8-self - private member access
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
t8-client = "t8_client.main:main"
